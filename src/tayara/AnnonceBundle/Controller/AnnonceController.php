<?php

namespace tayara\AnnonceBundle\Controller;

use tayara\AnnonceBundle\Entity\Annonce;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Method;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\File\File;
use tayara\AnnonceBundle\Form\AnnonceType;

/**
 * Annonce controller.
 *
 * @Route("annonce")
 */
class AnnonceController extends Controller {

    /**
     * Lists all annonce entities.
     *
     * @Route("/", name="annonce_index")
     * @Method("GET")
     */
    public function indexAction() {

        $em = $this->getDoctrine()->getManager();

        $annonces = $em->getRepository('tayaraAnnonceBundle:Annonce')->findBy(
                array('user' => $this->getUser()));

        //calculer nombre des annonces
        $nbAnnonce = $em->getRepository('tayaraAnnonceBundle:Annonce')->nbAnoonce();

        //calculer nombre des annonces vehicules
        $nbV = $em->getRepository('tayaraAnnonceBundle:Annonce')->nbVehicule();

        //calculer nombre des annonces immobiliers
        $nbIm = $em->getRepository('tayaraAnnonceBundle:Annonce')->nbImmobilier();

        return $this->render('annonce/index.html.twig', array(
                    'annonces' => $annonces, 'stat' => $nbAnnonce, 'nbv' => $nbV, 'nbIm' => $nbIm,
        ));
    }

    /**
     * Creates a new annonce entity.
     *
     * @Route("/new", name="annonce_new")
     * @Method({"GET", "POST"})
     */
    public function newAction(Request $request) {
        $annonce = new Annonce();
        $annonce->setUser($this->getUser());
        $annonce->setDate(new \DateTime());
        $annonce->setValide("1");
        $em = $this->getDoctrine()->getManager();
        $form = $this->createForm(AnnonceType::class, $annonce, ['em' => $em]);

        $form->handleRequest($request);
        if ($form->isSubmitted()) {

            $file = $annonce->getImage();
            $fileName = $this->generateUniqueFileName() . '.' . $file->guessExtension();
            $file->move(
                    $this->getParameter('images_directory'), $fileName
            );
            $annonce->setImage($fileName);
            $em = $this->getDoctrine()->getManager();

            $em->persist($annonce);
            $em->flush();

            $message = \Swift_Message::newInstance()
                    ->setSubject('Annonce')
                    ->setFrom('tayara@gmail.com')
                    ->setTo($this->getUser()->getEmail())
                    ->setBody($this->render('annonce/email.html.twig', array(
                        'nom' => $this->getUser()->getUsername(), 'titre' => $annonce->getTitre())));
            $this->get('mailer')->send($message);
            return $this->redirectToRoute('annonce_index');
        }

        return $this->render('annonce/new.html.twig', array(
                    'annonce' => $annonce,
                    'form' => $form->createView(),
        ));
    }

    private function generateUniqueFileName() {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }

    /**
     * Finds and displays a annonce entity.
     *
     * @Route("/{id}", name="annonce_show")
     * @Method("GET")
     */
    public function showAction(Annonce $annonce) {
        $deleteForm = $this->createDeleteForm($annonce);

        return $this->render('annonce/show.html.twig', array(
                    'annonce' => $annonce,
                    'delete_form' => $deleteForm->createView(),
        ));
    }

    /**
     * Displays a form to edit an existing annonce entity.
     *
     * @Route("/{id}/edit", name="annonce_edit")
     * @Method({"GET", "POST"})
     */
    public function editAction(Request $request, Annonce $annonce) {
        $annonce->setImage(
                new File($this->getParameter('images_directory') . '/' . $annonce->getImage())
        );

        $deleteForm = $this->createDeleteForm($annonce);
        $editForm = $this->createForm('tayara\AnnonceBundle\Form\AnnonceType', $annonce);
        $editForm->handleRequest($request);


        if ($editForm->isSubmitted() && $editForm->isValid()) {
            $file = $annonce->getImage();
            $fileName = $this->generateUniqueFileName() . '.' . $file->guessExtension();
            $file->move(
                    $this->getParameter('images_directory'), $fileName
            );
            $annonce->setImage($fileName);
            $em = $this->getDoctrine()->getManager();
            $em->persist($annonce);
            $em->flush();

            return $this->redirectToRoute('annonce_edit', array('id' => $annonce->getId()));
        }

        return $this->render('annonce/edit.html.twig', array(
                    'annonce' => $annonce,
                    'edit_form' => $editForm->createView(),
                    'delete_form' => $deleteForm->createView(),
        ));
    }

    /**
     * Deletes a annonce entity.
     *
     * @Route("/{id}", name="annonce_delete")
     * @Method("DELETE")
     */
    public function deleteAction(Request $request, Annonce $annonce) {
        $form = $this->createDeleteForm($annonce);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            $em = $this->getDoctrine()->getManager();
            $em->remove($annonce);
            $em->flush();
        }

        return $this->redirectToRoute('annonce_index');
    }

    /**
     * Creates a form to delete a annonce entity.
     *
     * @param Annonce $annonce The annonce entity
     *
     * @return \Symfony\Component\Form\Form The form
     */
    private function createDeleteForm(Annonce $annonce) {
        return $this->createFormBuilder()
                        ->setAction($this->generateUrl('annonce_delete', array('id' => $annonce->getId())))
                        ->setMethod('DELETE')
                        ->getForm()
        ;
    }

}
